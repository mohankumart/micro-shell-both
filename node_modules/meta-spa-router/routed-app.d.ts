export declare type HandleCliendNotification = (tag: string, data: any) => void;
export interface RoutedAppConfig {
    appId: string;
    handleNotification?: HandleCliendNotification;
    allowedOrigins?: string;
}
/**
 * Represents a micro frontend (a client app) the meta router routes to
 */
export declare class RoutedApp {
    private childConfig;
    config(config: RoutedAppConfig): void;
    init(): void;
    /** Sends the current route to the meta router to include it into the url */
    sendRoute(url: string): void;
    /** Sends a message to the shell */
    notifyShell(tag: string, data: object): void;
    /** Sends a message to all routed apps */
    broadcast(tag: string, data: object): void;
    /**
     * Registers a callback that allows the meta router to request
     * a new route within the routed application
    */
    registerForRouteChange(callback: (route: string) => void): void;
    private sendHeight();
}
